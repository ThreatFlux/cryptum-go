name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests with coverage
        run: |
          go test -coverprofile=coverage.txt ./pkg/encryption && go tool cover -func=coverage.txt

      - name: Check test coverage
        run: |
          COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}' | sed 's/[^0-9.]//g')
          MIN_COVERAGE=90
          echo "Total coverage: $COVERAGE%"
          echo "Required coverage: $MIN_COVERAGE%"
          
          if [ $(echo "$COVERAGE > $MIN_COVERAGE" | bc) -eq 1 ]; then
            echo "✅ Test coverage is above $MIN_COVERAGE%"
          else
            echo "❌ Test coverage is below $MIN_COVERAGE%"
            exit 1
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e-windows:
    name: E2E Tests (Windows)
    needs: unit-tests
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: go mod tidy

      - name: Build CLI
        run: |
          go build -o cryptum.exe ./cmd/cryptum
          echo "${{ github.workspace }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Verify CLI Installation
        run: |
          cryptum.exe -help
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to run cryptum.exe"
            exit 1
          }